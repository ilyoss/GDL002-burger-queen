{"version":3,"sources":["images/waiter.png","components/Tab.js","components/Menu.js","components/OrderCheckout.js","components/OrderElement.js","components/OrderElements.js","components/OrderHeader.js","components/Order.js","components/Content.js","components/Header.js","Config.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Tab","props","react_default","a","createElement","className","autoFocus","onClick","handleToggleVisibility","Menu","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleAddOrderItem","e","preventDefault","item","target","dataset","price","error","setState","bind","assertThisInitialized","state","visibility","prevState","_this2","components_Tab","Breakfast","map","option","index","key","id","data-counter","data-item","data-price","Lunch","React","Component","OrderCheckout","handleSendOrder","total","OrderElement","counter","handleDeleteOption","OrderElements","order","length","components_OrderElement","OrderHeader","Order","components_OrderHeader","components_OrderElements","components_OrderCheckout","Content","components_Menu","components_Order","handleElementCounter","Header","src","logo","alt","DB_CONFIG","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ServeItUp","customer","concat","parseInt","optionToRemove","filter","firebase","database","console","log","ref","set","writeUserData","initializeApp","json","localStorage","getItem","JSON","parse","prevProps","stringify","setItem","components_Header","components_Content","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d67d7c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/waiter.0ec46c57.png\";","import React from 'react';\n\nconst Tab = (props) => (\n  <div className=\"tab\">\n    <button className=\"button button--tab\" autoFocus={true} onClick={props.handleToggleVisibility}>Breakfast</button>\n    <button className=\"button button--tab\" onClick={props.handleToggleVisibility}>Lunch</button>\n  </div>\n);\n\nexport default Tab;\n","import React from 'react';\nimport Tab from './Tab'\nimport Breakfast from './data/breakfast.json';\nimport Lunch from './data/lunch.json';\n\nclass Menu extends React.Component{\n  constructor(props){\n    super(props);\n    this.handleToggleVisibility = this.handleToggleVisibility.bind(this);\n    this.handleAddOrderItem = this.handleAddOrderItem.bind(this);\n    this.state = {\n      visibility: true\n    }\n  }\n\n  handleToggleVisibility(){\n    this.setState((prevState) => {\n      return {\n        visibility: !prevState.visibility\n      }\n    })\n  }\n\n  handleAddOrderItem = (e) => {\n    e.preventDefault();\n    const item = e.target.dataset.item;\n    const price = e.target.dataset.price;\n    const error = this.props.handleAddOrderItem(item, price);\n    this.setState(() => ({ error }));\n  }\n\n  render(){\n    return (\n      <div className=\"content__module\">\n        <Tab handleToggleVisibility={this.handleToggleVisibility} />\n\n        <div className=\"menu__container\">\n\n          {this.state.visibility ?\n            (Breakfast.map((option, index) => (\n              <button\n                className=\"button\"\n                key={option.id}\n                data-counter={1}\n                data-item={option.item}\n                data-price={option.price}\n                onClick={this.handleAddOrderItem}\n              >\n                {option.item}: ${option.price}\n              </button>))\n            ) : (\n              Lunch.map((option, index) => (\n                <button\n                  className=\"button\"\n                  key={option.id}\n                  data-counter={1}\n                  data-item={option.item}\n                  data-price={option.price}\n                  onClick={this.handleAddOrderItem}\n                >\n                  {option.item}: ${option.price}\n                </button>))\n            )\n          }\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","import React from 'react';\n\nconst OrderCheckout = (props) => (\n  <div className=\"order-bottom\">\n    <button className=\"button button--send\" onClick={props.handleSendOrder}>Send order to kitchen</button>\n    <h3 className=\"order-total\">Total: ${props.total}</h3>\n  </div>\n);\n\nexport default OrderCheckout;\n","import React from 'react';\n\nconst OrderElement = (props) => (\n\n  <div className=\"order-element\">\n    <p className=\"order-text\">{props.counter} x {props.option.item}</p>\n    <p className=\"order-price\">${props.option.price}</p>\n    <button\n      className=\"button button--link\"\n      onClick={(e) => {\n        {props.handleDeleteOption(props.option)}\n      }}\n    >\n      <i className=\"fas fa-trash-alt\"></i>\n    </button>\n  </div>\n);\n\nexport default OrderElement;\n","import React from 'react';\nimport OrderElement from './OrderElement';\n\nconst OrderElements = (props) => (\n  <div className=\"order__elements\">\n    {props.order.length === 0 && <p className=\"order__message\">You have no items in your order yet</p>}\n    {\n      props.order.map((option, index) => (\n        <OrderElement\n          counter={1}\n          key={index}\n          option={option}\n          handleDeleteOption={props.handleDeleteOption}\n        />\n      ))\n    }\n  </div>\n);\n\nexport default OrderElements;\n","import React from 'react';\n\nconst OrderHeader = () => (\n  <div className=\"order-header\">\n    <h3 className=\"order-header__title\">Order items</h3>\n    <p className=\"order-header__title\">Client's name: </p>\n    <input className=\"order-header__input\"></input>\n  </div>\n);\n\nexport default OrderHeader;\n","import React from 'react';\nimport OrderCheckout from './OrderCheckout';\nimport OrderElements from './OrderElements';\nimport OrderHeader from './OrderHeader';\n\nconst Order = (props) => (\n  <div className=\"content__module\">\n\n    <OrderHeader />\n    <OrderElements\n      order={props.order}\n      handleDeleteOption={props.handleDeleteOption}\n    />\n    <OrderCheckout\n      total={props.total}\n      handleSendOrder={props.handleSendOrder}\n    />\n  </div>\n)\n\nexport default Order;\n","import React from 'react';\nimport Menu from './Menu';\nimport Order from './Order';\n\nconst Content = (props) => (\n  <div className=\"content\">\n    <Menu\n      handleAddOrderItem={props.handleAddOrderItem}\n      visibility={props.visibility}\n    />\n    <Order\n      order={props.order}\n      total={props.total}\n      handleDeleteOption={props.handleDeleteOption}\n      handleElementCounter={props.handleElementCounter}\n      handleSendOrder={props.handleSendOrder}\n    />\n  </div>\n);\n\nexport default Content;\n","import React from 'react';\nimport logo from '../images/waiter.png';\n\nconst Header = (props) => (\n  <div className=\"header\">\n    <div className=\"container\">\n      <img src={logo} className=\"header__logo\" alt=\"logo\" />\n      <h1 className=\"header__title\">Serve it up!</h1>\n    </div>\n  </div>\n);\n\nexport default Header;\n","// Your web app's Firebase configuration\nexport const DB_CONFIG = {\n  apiKey: \"AIzaSyA5fa5ZJSodIGux_vt7rO0V8XqFGlN0-jo\",\n  authDomain: \"serveitup-8bd91.firebaseapp.com\",\n  databaseURL: \"https://serveitup-8bd91.firebaseio.com\",\n  projectId: \"serveitup-8bd91\",\n  storageBucket: \"serveitup-8bd91.appspot.com\",\n  messagingSenderId: \"542473294263\",\n  appId: \"1:542473294263:web:b5018d84f79e2e86\"\n};\n","import React from 'react';\nimport Content from './components/Content';\nimport Header from './components/Header';\nimport './styles/styles.scss';\nimport firebase from 'firebase';\nimport {DB_CONFIG} from './Config';\n\nclass ServeItUp extends React.Component {\n  constructor(){\n    super();\n    this.firebase = firebase.initializeApp(DB_CONFIG);\n  }\n  state = {\n    order: [],\n    total: 0,\n    customer: ''\n  };\n\n  // Lifecycle methods\n  componentDidMount(){\n    try {\n      const json = localStorage.getItem('order');\n      const total = JSON.parse(localStorage.getItem('total'));\n      const order = JSON.parse(json);\n\n      if(order) {\n        this.setState(() => ({ order, total }));\n      }\n    } catch (e) {\n      // Do nothing at all if JSON data is invalid\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if(prevState.order.length !== this.state.order.length) {\n      const json = JSON.stringify(this.state.order);\n      const total = JSON.stringify(this.state.total)\n      localStorage.setItem('order', json);\n      localStorage.setItem('total', total);\n    }\n  }\n\n  componentWillUnmount(){\n    console.log('componentWillunmount');\n  }\n\n  handleAddOrderItem = (id, price) => {\n    this.setState((prevState) => ({\n      order: prevState.order.concat([{item: id, price: price}]),\n      total: (prevState.total + parseInt(price))\n    }));\n    \n    // const arr = this.state.order;\n    // const unique = arr.map(e => e['item'])\n    //   // store the keys of the unique objects\n    //   .map((e, i, final) => final.indexOf(e) === i && i)\n    //   // eliminate the dead keys & store unique objects\n    //   .filter(e => arr[e]).map(e => arr[e]);\n    //\n    // console.log(arr);\n    // console.log(unique);\n  }\n\n  handleDeleteOption = (optionToRemove) => {\n    this.setState((prevState) => ({\n      order: prevState.order.filter((option) => optionToRemove !== option),\n      total: (prevState.total - parseInt(optionToRemove.price))\n    }));\n  }\n\n  handleSendOrder = () => {\n    let database = firebase.database();\n    let order = this.state.order;\n    let total = this.state.total;\n    let customer = this.state.customer;\n    console.log(order);\n    console.log(customer);\n    writeUserData(customer, order, total);\n\n    function writeUserData(customer, order, total) {\n      firebase.database().ref('orders/' + customer).set({\n        order: order,\n        total: total\n      });\n    }\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Content\n          order={this.state.order}\n          total={this.state.total}\n          handleAddOrderItem={this.handleAddOrderItem}\n          handleDeleteOption={this.handleDeleteOption}\n          handleElementCounter={this.handleElementCounter}\n          handleSendOrder={this.handleSendOrder}\n        />\n      </div>\n    );\n  }\n}\nexport default ServeItUp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport ServeItUp from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<ServeItUp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}